version: 2.1

orbs:
  heroku: circleci/heroku@0.0.10
  github-release: h-matsuo/github-release@0.1.1

jobs:
  build-test:
    docker:
      - image: circleci/python:3.7-node
    steps:
      - checkout
      # install dependencies
      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Django checking
          command: python manage.py check

  publish-github-release:
    description: Create dummy file and publish a new release tagged `v0.0.${CIRCLE_BUILD_NUM}`.
    executor: github-release/default
    steps:
      - checkout
      - run:
          name: "Get spesific version of release"
          command: |
            GIT_BRANCH=$(git log --first-parent --merges -1 --oneline | head -1)
            export RELEASE_NAME=$(python3 -c "import re; find = lambda x: x.group(0) if x else 'bugfix';print(find(re.search('FA-[0-9]{4}', '${GIT_BRANCH}')))")
            echo 'export RELEASE_NAME=${RELEASE_NAME}' >> $BASH_ENV
      - run:
          command: |
            mkdir artifacts
            echo dummy > ./artifacts/file
      - run:
          name: "GET name of version and check it works"
          command: |
            echo $RELEASE_NAME
#      - github-release/create:
#          tag: v0.0.${CIRCLE_BUILD_NUM}
#          title: Version v0.0.${CIRCLE_BUILD_NUM}
#          description: This release is https://fa-${CIRCLE_BUILD_NUM}-dev-example.herokuapp.com
#          file-path: ./artifacts/file

  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          name: "Create candidate release for development"
          command: |
            heroku create fa-${CIRCLE_PREVIOUS_BUILD_NUM}-dev-example --buildpack heroku/python
            git remote set-url heroku https://:git.heroku.com/fa-${CIRCLE_PREVIOUS_BUILD_NUM}-dev-example.git
            export HEROKU_APP_NAME=fa-${CIRCLE_PREVIOUS_BUILD_NUM}-dev-example
            git push -f https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git ${CIRCLE_BRANCH}:master


workflows:
  build-test-deploy:
    jobs:
      - publish-github-release
#      - build-test
#      - publish-github-release:
#          requires:
#            - build-test
#          filters:
#            branches:
#              only: main
#            tags:
#              only: /^\d+\.\d+\.\d+$/
#      - deploy:
#          requires:
#            - publish-github-release
#          filters:
#            branches:
#              only: main
